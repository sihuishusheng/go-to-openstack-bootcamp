// Code generated by protoc-gen-go. DO NOT EDIT.
// source: data.proto

package echopb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import echopb_openstack_neutron "github.com/tangfeixiong/go-to-openstack-bootcamp/kopos/echopb/openstack/neutron"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type OpenstackNeutronNetRequestData struct {
	Id      string                            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name    string                            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Router  *echopb_openstack_neutron.Router  `protobuf:"bytes,3,opt,name=router" json:"router,omitempty"`
	Network *echopb_openstack_neutron.Network `protobuf:"bytes,4,opt,name=network" json:"network,omitempty"`
}

func (m *OpenstackNeutronNetRequestData) Reset()                    { *m = OpenstackNeutronNetRequestData{} }
func (m *OpenstackNeutronNetRequestData) String() string            { return proto.CompactTextString(m) }
func (*OpenstackNeutronNetRequestData) ProtoMessage()               {}
func (*OpenstackNeutronNetRequestData) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *OpenstackNeutronNetRequestData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OpenstackNeutronNetRequestData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OpenstackNeutronNetRequestData) GetRouter() *echopb_openstack_neutron.Router {
	if m != nil {
		return m.Router
	}
	return nil
}

func (m *OpenstackNeutronNetRequestData) GetNetwork() *echopb_openstack_neutron.Network {
	if m != nil {
		return m.Network
	}
	return nil
}

type OpenstackNeutronNetResponseData struct {
	Id               string                                  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name             string                                  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Router           *echopb_openstack_neutron.Router        `protobuf:"bytes,3,opt,name=router" json:"router,omitempty"`
	Network          *echopb_openstack_neutron.Network       `protobuf:"bytes,4,opt,name=network" json:"network,omitempty"`
	InterfaceInfo    *echopb_openstack_neutron.InterfaceInfo `protobuf:"bytes,5,opt,name=interface_info,json=interfaceInfo" json:"interface_info,omitempty"`
	GatewayNetworkId string                                  `protobuf:"bytes,6,opt,name=gateway_network_id,json=gatewayNetworkId" json:"gateway_network_id,omitempty"`
}

func (m *OpenstackNeutronNetResponseData) Reset()                    { *m = OpenstackNeutronNetResponseData{} }
func (m *OpenstackNeutronNetResponseData) String() string            { return proto.CompactTextString(m) }
func (*OpenstackNeutronNetResponseData) ProtoMessage()               {}
func (*OpenstackNeutronNetResponseData) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *OpenstackNeutronNetResponseData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OpenstackNeutronNetResponseData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OpenstackNeutronNetResponseData) GetRouter() *echopb_openstack_neutron.Router {
	if m != nil {
		return m.Router
	}
	return nil
}

func (m *OpenstackNeutronNetResponseData) GetNetwork() *echopb_openstack_neutron.Network {
	if m != nil {
		return m.Network
	}
	return nil
}

func (m *OpenstackNeutronNetResponseData) GetInterfaceInfo() *echopb_openstack_neutron.InterfaceInfo {
	if m != nil {
		return m.InterfaceInfo
	}
	return nil
}

func (m *OpenstackNeutronNetResponseData) GetGatewayNetworkId() string {
	if m != nil {
		return m.GatewayNetworkId
	}
	return ""
}

type ConsoleResourceRequestData struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *ConsoleResourceRequestData) Reset()                    { *m = ConsoleResourceRequestData{} }
func (m *ConsoleResourceRequestData) String() string            { return proto.CompactTextString(m) }
func (*ConsoleResourceRequestData) ProtoMessage()               {}
func (*ConsoleResourceRequestData) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *ConsoleResourceRequestData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ConsoleResourceRequestData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ConsoleResourceResponseData struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *ConsoleResourceResponseData) Reset()                    { *m = ConsoleResourceResponseData{} }
func (m *ConsoleResourceResponseData) String() string            { return proto.CompactTextString(m) }
func (*ConsoleResourceResponseData) ProtoMessage()               {}
func (*ConsoleResourceResponseData) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *ConsoleResourceResponseData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ConsoleResourceResponseData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DefensiveDroneRequestData struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *DefensiveDroneRequestData) Reset()                    { *m = DefensiveDroneRequestData{} }
func (m *DefensiveDroneRequestData) String() string            { return proto.CompactTextString(m) }
func (*DefensiveDroneRequestData) ProtoMessage()               {}
func (*DefensiveDroneRequestData) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *DefensiveDroneRequestData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DefensiveDroneRequestData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DefensiveDroneResponseData struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *DefensiveDroneResponseData) Reset()                    { *m = DefensiveDroneResponseData{} }
func (m *DefensiveDroneResponseData) String() string            { return proto.CompactTextString(m) }
func (*DefensiveDroneResponseData) ProtoMessage()               {}
func (*DefensiveDroneResponseData) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *DefensiveDroneResponseData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DefensiveDroneResponseData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*OpenstackNeutronNetRequestData)(nil), "echopb.OpenstackNeutronNetRequestData")
	proto.RegisterType((*OpenstackNeutronNetResponseData)(nil), "echopb.OpenstackNeutronNetResponseData")
	proto.RegisterType((*ConsoleResourceRequestData)(nil), "echopb.ConsoleResourceRequestData")
	proto.RegisterType((*ConsoleResourceResponseData)(nil), "echopb.ConsoleResourceResponseData")
	proto.RegisterType((*DefensiveDroneRequestData)(nil), "echopb.DefensiveDroneRequestData")
	proto.RegisterType((*DefensiveDroneResponseData)(nil), "echopb.DefensiveDroneResponseData")
}

func init() { proto.RegisterFile("data.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 344 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x53, 0xcb, 0x4b, 0xc3, 0x30,
	0x18, 0xa7, 0x75, 0x56, 0x8c, 0x38, 0x24, 0xa7, 0x3a, 0x41, 0x67, 0x2f, 0xee, 0xe0, 0x5a, 0xd0,
	0x8b, 0xe0, 0xc1, 0x89, 0xbb, 0xec, 0x52, 0xa1, 0x77, 0x19, 0x69, 0xfb, 0xb5, 0x0b, 0x73, 0xf9,
	0x6a, 0xf2, 0xd5, 0xe9, 0xbf, 0xa6, 0xff, 0x9c, 0xd0, 0xc7, 0x10, 0x75, 0x87, 0xde, 0x3c, 0xe5,
	0xf1, 0x7b, 0x26, 0x21, 0x8c, 0xa5, 0x82, 0x84, 0x5f, 0x68, 0x24, 0xe4, 0x0e, 0x24, 0x0b, 0x2c,
	0xe2, 0xc1, 0x53, 0x2e, 0x69, 0x51, 0xc6, 0x7e, 0x82, 0xab, 0x80, 0x84, 0xca, 0x33, 0x90, 0x6f,
	0x12, 0x55, 0x1e, 0xe4, 0x38, 0x26, 0x1c, 0x63, 0x01, 0xca, 0x90, 0x48, 0x96, 0xe3, 0x18, 0x91,
	0x12, 0xb1, 0x2a, 0x82, 0x25, 0x16, 0x68, 0x82, 0x5a, 0x1e, 0x6c, 0xf0, 0x40, 0x41, 0x49, 0x1a,
	0x55, 0x3b, 0xd6, 0x31, 0xde, 0xa7, 0xc5, 0x4e, 0x1f, 0x5b, 0x4e, 0x58, 0x43, 0x21, 0x50, 0x04,
	0x2f, 0x25, 0x18, 0x9a, 0x0a, 0x12, 0xbc, 0xcf, 0x6c, 0x99, 0xba, 0xd6, 0xd0, 0x1a, 0xed, 0x47,
	0xb6, 0x4c, 0x39, 0x67, 0x3d, 0x25, 0x56, 0xe0, 0xda, 0xd5, 0x4e, 0x35, 0xe7, 0x37, 0xcc, 0xd1,
	0x58, 0x12, 0x68, 0x77, 0x67, 0x68, 0x8d, 0x0e, 0xae, 0x86, 0x7e, 0x9d, 0xef, 0x6f, 0xf2, 0xfd,
	0x36, 0x37, 0xaa, 0x78, 0x51, 0xc3, 0xe7, 0xb7, 0x6c, 0x4f, 0x01, 0xad, 0x51, 0x2f, 0xdd, 0x5e,
	0x25, 0x3d, 0xdf, 0x2e, 0x0d, 0x6b, 0x62, 0xd4, 0x2a, 0xbc, 0x0f, 0x9b, 0x9d, 0xfd, 0xd9, 0xde,
	0x14, 0xa8, 0x0c, 0xfc, 0xf3, 0xfa, 0x3c, 0x64, 0x7d, 0xa9, 0x08, 0x74, 0x26, 0x12, 0x98, 0x4b,
	0x95, 0xa1, 0xbb, 0x5b, 0x79, 0x5c, 0x6c, 0xf7, 0x98, 0xb5, 0xfc, 0x99, 0xca, 0x30, 0x3a, 0x94,
	0xdf, 0x97, 0xfc, 0x92, 0xf1, 0x5c, 0x10, 0xac, 0xc5, 0xfb, 0xbc, 0x89, 0x98, 0xcb, 0xd4, 0x75,
	0xaa, 0x83, 0x1e, 0x35, 0x48, 0x53, 0x62, 0x96, 0x7a, 0x13, 0x36, 0x78, 0x40, 0x65, 0xf0, 0x19,
	0x22, 0x30, 0x58, 0xea, 0x04, 0x3a, 0xbe, 0xba, 0x77, 0xcf, 0x4e, 0x7e, 0x39, 0x74, 0xbb, 0x79,
	0xef, 0x8e, 0x1d, 0x4f, 0x21, 0x03, 0x65, 0xe4, 0x2b, 0x4c, 0x35, 0xaa, 0xce, 0x1d, 0x26, 0x6c,
	0xf0, 0xd3, 0xa0, 0x5b, 0x85, 0xd8, 0xa9, 0x7e, 0xc2, 0xf5, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x65, 0xca, 0x3b, 0xa8, 0x7e, 0x03, 0x00, 0x00,
}
